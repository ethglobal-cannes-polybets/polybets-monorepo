/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  A13e,
  A13eInterface,
} from "../../../../../@oasisprotocol/sapphire-contracts/contracts/auth/A13e";

const _abi = [
  {
    inputs: [],
    name: "A13e_RevokedAuthToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "v",
            type: "uint256",
          },
        ],
        internalType: "struct SignatureRSV",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "login",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class A13e__factory {
  static readonly abi = _abi;
  static createInterface(): A13eInterface {
    return new Interface(_abi) as A13eInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): A13e {
    return new Contract(address, _abi, runner) as unknown as A13e;
  }
}
