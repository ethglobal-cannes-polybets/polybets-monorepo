/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SiweParser,
  SiweParserInterface,
} from "../../../../@oasisprotocol/sapphire-contracts/contracts/SiweParser";

const _abi = [
  {
    inputs: [],
    name: "SiweParser_InvalidAddressLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SiweParser_InvalidNonce",
    type: "error",
  },
] as const;

const _bytecode =
  "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a74dbb424bfa27372ba86bbacb751a95bc3d62bb1757c5d6837e30762816e21064736f6c634300081c0033";

type SiweParserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SiweParserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SiweParser__factory extends ContractFactory {
  constructor(...args: SiweParserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SiweParser & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SiweParser__factory {
    return super.connect(runner) as SiweParser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SiweParserInterface {
    return new Interface(_abi) as SiweParserInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SiweParser {
    return new Contract(address, _abi, runner) as unknown as SiweParser;
  }
}
